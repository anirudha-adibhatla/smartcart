<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Makeathon">

    <Color x:Key="MsgErrorForegroundColor">#e74c3c</Color>
    <Color x:Key="MsgWarningForegroundColor">#f1c40f</Color>
    <Color x:Key="MsgInfoForegroundColor">#2d2d2d</Color>
    <Color x:Key="StatusForegroundColor">#2d2d2d</Color>
    <Color x:Key="MsgSuccessForegroundColor">#2c892a</Color>
    <Color x:Key="MsgNewProcessForegroundColor">#8646a0</Color>
    <Color x:Key="MsgAttetionForegroundColor">#3498db</Color>

    <Color x:Key="MainBackgroundColor">#ffffff</Color>
    <Color x:Key="MainAccentColor">#3498db</Color>
    <Color x:Key="DataGridCellEditedColor">#c0392b</Color>
    <Color x:Key="BusyBackgroundColor">#d35400</Color>

    <SolidColorBrush x:Key="ErrorForegroundBrush" Color="{DynamicResource MsgErrorForegroundColor}"/>
    <SolidColorBrush x:Key="WarningForegroundBrush" Color="{DynamicResource MsgWarningForegroundColor}"/>
    <SolidColorBrush x:Key="InfoForegroundBrush" Color="{DynamicResource MsgInfoForegroundColor}"/>
    <SolidColorBrush x:Key="SuccessForegroundBrush" Color="{DynamicResource MsgSuccessForegroundColor}"/>
    <SolidColorBrush x:Key="NewProcessForegroundBrush" Color="{DynamicResource MsgNewProcessForegroundColor}"/>
    <SolidColorBrush x:Key="AttentionForegroundBrush" Color="{DynamicResource MsgAttetionForegroundColor}"/>

    <SolidColorBrush x:Key="MainBackgroundBrush" Color="{DynamicResource MainBackgroundColor}"/>
    <SolidColorBrush x:Key="MainAccentBrush" Color="{DynamicResource MainAccentColor}"/>
    <SolidColorBrush x:Key="MainAccentTransparentBrush" Color="{DynamicResource MainAccentColor}" Opacity="0.7"/>
    <SolidColorBrush x:Key="DataGridCellEditedBrush" Color="{DynamicResource DataGridCellEditedColor}"/>
    <SolidColorBrush x:Key="StatusForegroundBrush" Color="{DynamicResource StatusForegroundColor}"/>


    <!--<Converters:LowerCaseToUpperCaseConverter x:Key="LowerCaseToUpperCaseConverter"/>
    <Converters:ListToStringConverter x:Key="ListToStringConverter"/>-->
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

    <BitmapImage x:Key="ToastErrorBitmapImage" UriSource="/Makeathon;component/Resources/toast_error.png"/>
    <BitmapImage x:Key="ToastWarningBitmapImage" UriSource="/Makeathon;component/Resources/toast_warning.png"/>
    <BitmapImage x:Key="ToastSuccessBitmapImage" UriSource="/Makeathon;component/Resources/toast_success.png"/>
    <BitmapImage x:Key="ToastInfoBitmapImage" UriSource="/Makeathon;component/Resources/toast_info.png"/>
    
    <Image x:Key="ErrorIcon" Source="{StaticResource ErrorBitmapImage}"/>
    <Image x:Key="WarningIcon" Source="{StaticResource WarningBitmapImage}"/>
    <Image x:Key="SuccessIcon" Source="{StaticResource SuccessBitmapImage}"/>

    <!--Styles-->
    <Style x:Key="SemiTransparentThinScrollViewer" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Background" Value="{DynamicResource MainBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource MainAccentBrush}"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Background="{DynamicResource MainBackgroundBrush}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <ScrollContentPresenter Grid.Column="0"/>

                        <ScrollBar Grid.Column="1"
                            
                             Name="PART_VerticalScrollBar"
                             Value="{TemplateBinding VerticalOffset}"
                             Maximum="{TemplateBinding ScrollableHeight}"
                             ViewportSize="{TemplateBinding ViewportHeight}"
                             Width="13"
                             MinWidth="13"
                             Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                             Padding="0"/>


                        <ScrollBar Name="PART_HorizontalScrollBar"
                             
                             Orientation="Horizontal"
                             Grid.Row="1"
                             Grid.Column="0"
                             Height="10"
                             MinHeight="10"
                             Value="{TemplateBinding HorizontalOffset}"
                             Maximum="{TemplateBinding ScrollableWidth}"
                             ViewportSize="{TemplateBinding ViewportWidth}"
                             Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="VerticalScrollBarVisibility" Value="Hidden"/>
                <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SemiTransparentThinScrollViewerWOAutoHide" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Background" Value="{DynamicResource MainBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource MainAccentBrush}"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Background="{DynamicResource MainBackgroundBrush}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <ScrollContentPresenter Grid.Column="0"/>

                        <ScrollBar Grid.Column="1"
                            
                             Name="PART_VerticalScrollBar"
                             Value="{TemplateBinding VerticalOffset}"
                             Maximum="{TemplateBinding ScrollableHeight}"
                             ViewportSize="{TemplateBinding ViewportHeight}"
                             Width="12"
                             MinWidth="12"
                             Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                             Padding="0"/>


                        <ScrollBar Name="PART_HorizontalScrollBar"
                             
                             Orientation="Horizontal"
                             Grid.Row="1"
                             Grid.Column="0"
                             Height="10"
                             MinHeight="10"
                             Value="{TemplateBinding HorizontalOffset}"
                             Maximum="{TemplateBinding ScrollableWidth}"
                             ViewportSize="{TemplateBinding ViewportWidth}"
                             Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NoChromeButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="Chrome" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="Chrome" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource MainAccentBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource MainTextBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AccentedNoChromeButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="GridBorder" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}">
                        <Grid x:Name="Chrome" Background="{DynamicResource MainBackgroundBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="Chrome" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource MainBackgroundBrush}"/>
                            <Setter TargetName ="Chrome" Property="Background" Value="{DynamicResource MainAccentBrush}"/>
                            <Setter TargetName="GridBorder" Property="BorderThickness" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource InfoForegroundBrush}"/>
                            <Setter TargetName ="Chrome" Property="Background" Value="{x:Null}"/>
                            <Setter TargetName="GridBorder" Property="BorderThickness" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AccentedTextNoChromeButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="GridBorder" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}">
                        <Grid x:Name="Chrome" Background="{DynamicResource MainBackgroundBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="Chrome" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource MainBackgroundBrush}"/>
                            <Setter TargetName ="Chrome" Property="Background" Value="{DynamicResource MainAccentBrush}"/>
                            <Setter TargetName="GridBorder" Property="BorderThickness" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource MainAccentBrush}"/>
                            <Setter TargetName ="Chrome" Property="Background" Value="{x:Null}"/>
                            <Setter TargetName="GridBorder" Property="BorderThickness" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="StandardLabel" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{DynamicResource InfoForegroundBrush}"/>
        <Setter Property="FontSize" Value="18.667"/>
    </Style>

    <Style x:Key="InputLikeLabel" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{DynamicResource MainBackgroundBrush}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"/>
        <Setter Property="FontSize" Value="18.667"/>
    </Style>

    <Style TargetType="TabItem" x:Key="ePDRDTabPanelStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Grid Name="Panel">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.8*"/>
                            <ColumnDefinition Width="0.2*"/>
                        </Grid.ColumnDefinitions>
                        <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Panel" Property="Background" Value="{DynamicResource MainAccentBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource MainBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Panel" Property="Background" Value="{DynamicResource MainBackgroundBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource MainTextBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style TargetType="{x:Type CustomControls:ImageButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CustomControls:ImageButton}">
                    <Grid>
                        <Image Name="ImageBackGround" Source="{Binding Image, RelativeSource={RelativeSource TemplatedParent}}" Stretch="UniformToFill"
                            Height="{Binding ImageSize, RelativeSource={RelativeSource TemplatedParent}}" 
                            Width="{Binding ImageSize, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="ImageBackGround" Property="Source" Value="{Binding OnHoverImage, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="ImageBackGround" Property="Source" Value="{Binding OnHoverImage, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type CustomControls:TextBoxWithHint}">
        <Style.Resources>
            <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                <VisualBrush.Visual>
                    <Label Content="{Binding Hint, RelativeSource={RelativeSource TemplatedParent}}" Foreground="LightGray" />
                </VisualBrush.Visual>
            </VisualBrush>
        </Style.Resources>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"/>
        <Setter Property="Foreground" Value="{DynamicResource InfoForegroundBrush}"/>
        <Style.Triggers>
            <Trigger Property="Text" Value="">
                <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
            </Trigger>
            <Trigger Property="Text" Value="{x:Null}">
                <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="Background" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>-->

    <Style x:Key="EPDRDListBoxItemStyle" TargetType="ListBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Name="_Border"
                                Padding="2"
                                SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="_Border" Property="Background" Value="{DynamicResource MainAccentBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource InfoForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="_Border" Property="Background" Value="{DynamicResource MainAccentTransparentBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="EPDRDGridsplitterStyle" TargetType="GridSplitter">
        <Setter Property="Background" Value="{StaticResource MainBackgroundColor}" />
        <Setter Property="IsTabStop" Value="true" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="PreviewStyle">
            <Setter.Value>
                <Style TargetType="Control">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Control">
                                <Grid x:Name="Root" Opacity=".5">

                                    <!-- Background -->
                                    <Rectangle Fill="{TemplateBinding Background}" />

                                    <!-- Horizontal Template -->
                                    <Grid x:Name="HorizontalTemplate" Height="6">
                                        <!-- Just show the faint gray grid splitter rectangle with no other details -->
                                    </Grid>

                                    <!-- Vertical Template -->
                                    <Grid x:Name="VerticalTemplate" Visibility="Collapsed" Width="6">
                                        <!-- Just show the faint gray grid splitter rectangle with no other details -->
                                    </Grid>

                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridSplitter">
                    <Grid x:Name="Root" IsHitTestVisible="{TemplateBinding IsEnabled}">

                        <!-- VSM -->
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <!-- Background -->
                        <Rectangle Fill="{TemplateBinding Background}" StrokeThickness="0" />

                        <!-- Horizontal Template -->
                        <Grid x:Name="HorizontalTemplate" Height="10">
                            <StackPanel Height="10" VerticalAlignment="Center">
                                <Rectangle Height="1" Margin="1" Width="10" StrokeThickness="0" Fill="#FF868686" />
                                <Rectangle Height="1" Margin="1" Width="10" StrokeThickness="0" Fill="#FF868686" />
                            </StackPanel>
                        </Grid>

                        <!-- Vertical Template -->
                        <Grid x:Name="VerticalTemplate" Visibility="Collapsed" Width="10">
                            <StackPanel Width="10" VerticalAlignment="Center" Orientation="Horizontal">
                                <Rectangle Width="1" Margin="1" Height="10" StrokeThickness="0" Fill="#FF868686" />
                                <Rectangle Width="1" Margin="1" Height="10" StrokeThickness="0" Fill="#FF868686" />
                            </StackPanel>
                        </Grid>

                        <!-- Focus Visual -->
                        <Rectangle x:Name="FocusVisual" Stroke="{x:Null}" StrokeThickness="1" Opacity="0" IsHitTestVisible="false" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>